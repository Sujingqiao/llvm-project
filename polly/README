

Transform:
total 872
-rw-r--r--@ 1 sujingqiao  staff    77K  8 25 23:39 MatmulOptimizer.cpp
-rw-r--r--@ 1 sujingqiao  staff    58K  8 25 23:39 DeLICM.cpp
-rw-r--r--@ 1 sujingqiao  staff    47K  8 25 23:39 ScheduleTreeTransform.cpp
-rw-r--r--@ 1 sujingqiao  staff    45K  8 25 23:39 ForwardOpTree.cpp
-rw-r--r--@ 1 sujingqiao  staff    42K  8 25 23:39 ZoneAlgo.cpp
-rw-r--r--@ 1 sujingqiao  staff    40K  8 25 23:39 ScheduleOptimizer.cpp
-rw-r--r--@ 1 sujingqiao  staff    32K  8 25 23:39 Simplify.cpp
-rw-r--r--@ 1 sujingqiao  staff    19K  8 25 23:39 MaximalStaticExpansion.cpp
-rw-r--r--@ 1 sujingqiao  staff    13K  8 25 23:39 FlattenAlgo.cpp
-rw-r--r--@ 1 sujingqiao  staff    11K  8 25 23:39 ManualOptimizer.cpp
-rw-r--r--@ 1 sujingqiao  staff   6.7K  8 25 23:39 DeadCodeElimination.cpp
-rw-r--r--@ 1 sujingqiao  staff   6.0K  8 25 23:39 Canonicalization.cpp
-rw-r--r--@ 1 sujingqiao  staff   4.8K  8 25 23:39 FlattenSchedule.cpp
-rw-r--r--@ 1 sujingqiao  staff   4.1K  8 25 23:39 ScopInliner.cpp
-rw-r--r--@ 1 sujingqiao  staff   3.7K  8 25 23:39 CodePreparation.cpp

Support:
total 376
-rw-r--r--@ 1 sujingqiao  staff    30K  8 25 23:39 ISLTools.cpp
-rw-r--r--@ 1 sujingqiao  staff    30K  8 25 23:39 ScopHelper.cpp
-rw-r--r--@ 1 sujingqiao  staff    24K  8 25 23:39 SCEVValidator.cpp
-rw-r--r--@ 1 sujingqiao  staff    24K  8 25 23:39 RegisterPasses.cpp
-rw-r--r--@ 1 sujingqiao  staff    21K  8 25 23:39 SCEVAffinator.cpp
-rw-r--r--@ 1 sujingqiao  staff    14K  8 25 23:39 VirtualInstruction.cpp
-rw-r--r--@ 1 sujingqiao  staff   8.7K  8 25 23:39 GICHelper.cpp
-rw-r--r--@ 1 sujingqiao  staff   3.9K  8 25 23:39 DumpFunctionPass.cpp
-rw-r--r--@ 1 sujingqiao  staff   3.0K  8 25 23:39 DumpModulePass.cpp
-rw-r--r--@ 1 sujingqiao  staff   2.0K  8 25 23:39 PollyPasses.def
-rw-r--r--@ 1 sujingqiao  staff   1.3K  8 25 23:39 ScopLocation.cpp
-rw-r--r--@ 1 sujingqiao  staff   1.0K  8 25 23:39 PollyDebug.cpp
-rw-r--r--@ 1 sujingqiao  staff    91B  8 25 23:39 Mainpage.h

CodeGen:
total 544
-rw-r--r--@ 1 sujingqiao  staff    52K  8 25 23:39 IslNodeBuilder.cpp
-rw-r--r--@ 1 sujingqiao  staff    52K  8 25 23:39 BlockGenerators.cpp
-rw-r--r--@ 1 sujingqiao  staff    31K  8 25 23:39 IslAst.cpp
-rw-r--r--@ 1 sujingqiao  staff    26K  8 25 23:39 IslExprBuilder.cpp
-rw-r--r--@ 1 sujingqiao  staff    21K  8 25 23:39 LoopGeneratorsKMP.cpp
-rw-r--r--@ 1 sujingqiao  staff    15K  8 25 23:39 CodeGeneration.cpp
-rw-r--r--@ 1 sujingqiao  staff    11K  8 25 23:39 PerfMonitor.cpp
-rw-r--r--@ 1 sujingqiao  staff    11K  8 25 23:39 LoopGenerators.cpp
-rw-r--r--@ 1 sujingqiao  staff   8.8K  8 25 23:39 IRBuilder.cpp
-rw-r--r--@ 1 sujingqiao  staff   8.2K  8 25 23:39 LoopGeneratorsGOMP.cpp
-rw-r--r--@ 1 sujingqiao  staff   7.4K  8 25 23:39 Utils.cpp
-rw-r--r--@ 1 sujingqiao  staff   5.3K  8 25 23:39 RuntimeDebugBuilder.cpp

Analysis:
total 832
-rw-r--r--@ 1 sujingqiao  staff   139K  8 25 23:39 ScopBuilder.cpp
-rw-r--r--@ 1 sujingqiao  staff    97K  8 25 23:39 ScopInfo.cpp
-rw-r--r--@ 1 sujingqiao  staff    72K  8 25 23:39 ScopDetection.cpp
-rw-r--r--@ 1 sujingqiao  staff    39K  8 25 23:39 DependenceInfo.cpp
-rw-r--r--@ 1 sujingqiao  staff    26K  8 25 23:39 ScopDetectionDiagnostic.cpp
-rw-r--r--@ 1 sujingqiao  staff   7.9K  8 25 23:39 ScopGraphPrinter.cpp
-rw-r--r--@ 1 sujingqiao  staff   7.5K  8 25 23:39 PolyhedralInfo.cpp
-rw-r--r--@ 1 sujingqiao  staff   5.5K  8 25 23:39 ScopPass.cpp
-rw-r--r--@ 1 sujingqiao  staff   4.0K  8 25 23:39 PruneUnprofitable.cpp

External:
total 56
-rw-r--r--@ 1 sujingqiao  staff   8.9K  8 25 23:39 CMakeLists.txt
-rw-r--r--@ 1 sujingqiao  staff   1.7K  8 25 23:39 isl_config.h.cmake
-rw-r--r--@ 1 sujingqiao  staff   1.3K  8 25 23:39 update-isl.sh
-rw-r--r--@ 1 sujingqiao  staff   550B  8 25 23:39 README.txt
drwxr-xr-x@ 4 sujingqiao  staff   128B  8 26 07:44 isl
-rw-r--r--@ 1 sujingqiao  staff    48B  8 25 23:39 isl_srcdir.c.cmake

Exchange:
total 64
-rw-r--r--@ 1 sujingqiao  staff    29K  8 25 23:39 JSONExporter.cpp

Plugin:
total 8
-rw-r--r--@ 1 sujingqiao  staff   704B  8 25 23:39 Polly.cpp


Polly - Polyhedral optimizations for LLVM
-----------------------------------------
http://polly.llvm.org/

Polly uses a mathematical representation, the polyhedral model, to represent and
transform loops and other control flow structures. Using an abstract
representation it is possible to reason about transformations in a more general
way and to use highly optimized linear programming libraries to figure out the
optimal loop structure. These transformations can be used to do constant
propagation through arrays, remove dead loop iterations, optimize loops for
cache locality, optimize arrays, apply advanced automatic parallelization, drive
vectorization, or they can be used to do software pipelining.
